#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–∏—Å–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.
"""

import os
import glob
from pathlib import Path

def find_database_files():
    """–ü–æ–∏—Å–∫ —Ñ–∞–π–ª–æ–≤ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö."""
    print("üîç –ü–æ–∏—Å–∫ —Ñ–∞–π–ª–æ–≤ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    
    # –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—É—Ç–∏
    search_paths = [
        ".",
        "data",
        "..",
        "/root",
        "/home",
        "/var"
    ]
    
    # –†–∞—Å—à–∏—Ä–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤ –ë–î
    extensions = ["*.db", "*.sqlite", "*.sqlite3"]
    
    found_files = []
    
    for search_path in search_paths:
        if os.path.exists(search_path):
            print(f"üìÅ –ü—Ä–æ–≤–µ—Ä—è–µ–º: {search_path}")
            
            for ext in extensions:
                pattern = os.path.join(search_path, "**", ext)
                files = glob.glob(pattern, recursive=True)
                
                for file in files:
                    if os.path.isfile(file):
                        size = os.path.getsize(file)
                        print(f"  üìÑ {file} ({size} bytes)")
                        found_files.append((file, size))
    
    return found_files

def check_database_structure(db_path):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö."""
    try:
        import sqlite3
        
        print(f"\nüîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É: {db_path}")
        
        conn = sqlite3.connect(db_path)
        cursor = conn.cursor()
        
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ç–∞–±–ª–∏—Ü
        cursor.execute("SELECT name FROM sqlite_master WHERE type='table'")
        tables = cursor.fetchall()
        
        print(f"üìã –ù–∞–π–¥–µ–Ω–æ —Ç–∞–±–ª–∏—Ü: {len(tables)}")
        for table in tables:
            print(f"  - {table[0]}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º chat_activities
        if any(table[0] == 'chat_activities' for table in tables):
            print("\n‚úÖ –¢–∞–±–ª–∏—Ü–∞ chat_activities –Ω–∞–π–¥–µ–Ω–∞!")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É
            cursor.execute("PRAGMA table_info(chat_activities)")
            columns = cursor.fetchall()
            
            print("üìã –ö–æ–ª–æ–Ω–∫–∏ –≤ chat_activities:")
            for col in columns:
                print(f"  - {col[1]} ({col[2]})")
                
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω—É–∂–Ω—ã–µ –∫–æ–ª–æ–Ω–∫–∏
            column_names = [col[1] for col in columns]
            needed_columns = ['media_file_id', 'media_duration', 'media_file_size']
            
            missing_columns = [col for col in needed_columns if col not in column_names]
            if missing_columns:
                print(f"\n‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–µ –∫–æ–ª–æ–Ω–∫–∏: {missing_columns}")
                return False
            else:
                print(f"\n‚úÖ –í—Å–µ –Ω—É–∂–Ω—ã–µ –∫–æ–ª–æ–Ω–∫–∏ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç!")
                return True
        else:
            print("\n‚ùå –¢–∞–±–ª–∏—Ü–∞ chat_activities –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ë–î: {e}")
        return False
    finally:
        if 'conn' in locals():
            conn.close()

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è."""
    print("üöÄ –ü–æ–∏—Å–∫ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    
    # –ò—â–µ–º —Ñ–∞–π–ª—ã –ë–î
    found_files = find_database_files()
    
    if not found_files:
        print("\n‚ùå –§–∞–π–ª—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!")
        return
    
    print(f"\nüìä –ù–∞–π–¥–µ–Ω–æ {len(found_files)} —Ñ–∞–π–ª–æ–≤ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö:")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–π –Ω–∞–π–¥–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
    for db_path, size in found_files:
        if size > 1024:  # –¢–æ–ª—å–∫–æ —Ñ–∞–π–ª—ã –±–æ–ª—å—à–µ 1KB
            print(f"\n{'='*50}")
            print(f"üìÑ {db_path}")
            print(f"üìä –†–∞–∑–º–µ—Ä: {size:,} bytes")
            
            if check_database_structure(db_path):
                print(f"\n‚úÖ {db_path} - –ø–æ–¥—Ö–æ–¥—è—â–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö!")
                print(f"üí° –û–±–Ω–æ–≤–∏—Ç–µ –ø—É—Ç—å –≤ migrate_db.py –Ω–∞: {db_path}")
                break
        else:
            print(f"\n‚ö†Ô∏è {db_path} - —Å–ª–∏—à–∫–æ–º –º–∞–ª–µ–Ω—å–∫–∏–π —Ñ–∞–π–ª ({size} bytes), –ø—Ä–æ–ø—É—Å–∫–∞–µ–º")

if __name__ == "__main__":
    main()
