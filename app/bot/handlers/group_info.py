"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≥—Ä—É–ø–ø–∞—Ö –∏ –∫–∞–Ω–∞–ª–∞—Ö.
"""

from telegram import Update
from telegram.ext import ContextTypes
from loguru import logger

from app.core.database import get_db_session
from app.services.user_service import UserService


async def handle_group_info(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–µ–∫—É—â–µ–º —á–∞—Ç–µ.
    
    –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç ID —á–∞—Ç–∞, —Ç–∏–ø, –Ω–∞–∑–≤–∞–Ω–∏–µ - –ø–æ–ª–µ–∑–Ω–æ –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞.
    """
    try:
        chat = update.effective_chat
        user = update.effective_user
        
        if not user:
            return
            
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–¥–º–∏–Ω
        async with get_db_session() as session:
            user_service = UserService(session)
            db_user = await user_service.get_user_by_telegram_id(user.id)
            
            if not db_user or user.id not in [1670311707]:  # ID —Å—É–ø–µ—Ä-–∞–¥–º–∏–Ω–∞
                await update.message.reply_text("‚ùå –ö–æ–º–∞–Ω–¥–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º")
                return
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —á–∞—Ç–µ
        info_lines = [
            "üìä **–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —á–∞—Ç–µ:**",
            "",
            f"üÜî **ID —á–∞—Ç–∞:** `{chat.id}`",
            f"üìù **–ù–∞–∑–≤–∞–Ω–∏–µ:** {chat.title or '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}",
            f"üìä **–¢–∏–ø:** {chat.type}",
        ]
        
        if chat.username:
            info_lines.append(f"üîó **Username:** @{chat.username}")
            
        if chat.description:
            info_lines.append(f"üìÑ **–û–ø–∏—Å–∞–Ω–∏–µ:** {chat.description}")
            
        # –î–æ–±–∞–≤–ª—è–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è –≥—Ä—É–ø–ø
        if chat.type in ['group', 'supergroup']:
            info_lines.extend([
                "",
                "‚öôÔ∏è **–î–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞:**",
                f"```",
                f"GROUP_ID={chat.id}",
                f"```",
                "",
                "üí° –°–∫–æ–ø–∏—Ä—É–π—Ç–µ ID –∏ –¥–æ–±–∞–≤—å—Ç–µ –≤ .env —Ñ–∞–π–ª"
            ])
            
        message = "\n".join(info_lines)
        
        await update.message.reply_text(
            message,
            parse_mode="Markdown"
        )
        
        logger.info(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —á–∞—Ç–µ {chat.id} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.id}")
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ handle_group_info: {e}")
        await update.message.reply_text(
            "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —á–∞—Ç–µ"
        )


# –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
group_info_handler = handle_group_info
