"""
–¶–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–∞—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è ClubBot.

–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç loguru –¥–ª—è –∑–∞–ø–∏—Å–∏ –ª–æ–≥–æ–≤ –≤ –∫–æ–Ω—Å–æ–ª—å –∏ —Ñ–∞–π–ª—ã.
"""

import sys
import os
from pathlib import Path
from loguru import logger
from typing import Optional

from config.settings import get_settings


def setup_logging(
    log_level: Optional[str] = None,
    log_file: Optional[str] = None,
    log_error_file: Optional[str] = None,
    log_format: Optional[str] = None,
    log_rotation: Optional[str] = None,
    log_retention: Optional[str] = None,
    debug: Optional[bool] = None
) -> None:
    """
    –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
    
    Args:
        log_level: –£—Ä–æ–≤–µ–Ω—å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è (DEBUG, INFO, WARNING, ERROR, CRITICAL)
        log_file: –ü—É—Ç—å –∫ –æ—Å–Ω–æ–≤–Ω–æ–º—É —Ñ–∞–π–ª—É –ª–æ–≥–æ–≤
        log_error_file: –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É –ª–æ–≥–æ–≤ –æ—à–∏–±–æ–∫
        log_format: –§–æ—Ä–º–∞—Ç –∑–∞–ø–∏—Å–∏ –ª–æ–≥–æ–≤
        log_rotation: –ü–µ—Ä–∏–æ–¥ —Ä–æ—Ç–∞—Ü–∏–∏ –ª–æ–≥–æ–≤
        log_retention: –í—Ä–µ–º—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –ª–æ–≥–æ–≤
        debug: –†–µ–∂–∏–º –æ—Ç–ª–∞–¥–∫–∏
    """
    # –ü–æ–ª—É—á–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    settings = get_settings()
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–ª–∏ –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫
    log_level = log_level or settings.LOG_LEVEL
    log_file = log_file or settings.LOG_FILE
    log_error_file = log_error_file or settings.LOG_ERROR_FILE
    log_format = log_format or settings.LOG_FORMAT
    log_rotation = log_rotation or settings.LOG_ROTATION
    log_retention = log_retention or settings.LOG_RETENTION
    debug = debug if debug is not None else settings.DEBUG
    
    # –£–¥–∞–ª—è–µ–º –≤—Å–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    logger.remove()
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –¥–ª—è –∫–æ–Ω—Å–æ–ª–∏
    console_format = (
        "<green>{time:YYYY-MM-DD HH:mm:ss}</green> | "
        "<level>{level: <8}</level> | "
        "<cyan>{name}</cyan>:<cyan>{function}</cyan>:<cyan>{line}</cyan> - "
        "<level>{message}</level>"
    )
    
    logger.add(
        sys.stdout,
        level=log_level,
        format=console_format,
        colorize=True,
        backtrace=debug,
        diagnose=debug
    )
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –ª–æ–≥–æ–≤ –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if log_file:
        log_dir = Path(log_file).parent
        log_dir.mkdir(parents=True, exist_ok=True)
        
        # –û—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª –ª–æ–≥–æ–≤ (–≤—Å–µ —É—Ä–æ–≤–Ω–∏)
        logger.add(
            log_file,
            level="DEBUG",  # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –≤—Å–µ —É—Ä–æ–≤–Ω–∏ –≤ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª
            format=log_format,
            rotation=log_rotation,
            retention=log_retention,
            compression="zip",
            backtrace=debug,
            diagnose=debug,
            encoding="utf-8-sig"
        )
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –ª–æ–≥–æ–≤ –æ—à–∏–±–æ–∫ –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if log_error_file:
        error_log_dir = Path(log_error_file).parent
        error_log_dir.mkdir(parents=True, exist_ok=True)
        
        # –§–∞–π–ª —Ç–æ–ª—å–∫–æ –¥–ª—è –æ—à–∏–±–æ–∫ (ERROR –∏ CRITICAL)
        logger.add(
            log_error_file,
            level="ERROR",  # –¢–æ–ª—å–∫–æ –æ—à–∏–±–∫–∏ –∏ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏
            format=log_format,
            rotation=log_rotation,
            retention=log_retention,
            compression="zip",
            backtrace=True,
            diagnose=True,
            encoding="utf-8-sig"
        )
    
    # –õ–æ–≥–∏—Ä—É–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ
    logger.info("üîß –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ:")
    logger.info(f"   üìä –£—Ä–æ–≤–µ–Ω—å: {log_level}")
    logger.info(f"   üìÅ –û—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª: {log_file}")
    logger.info(f"   ‚ùå –§–∞–π–ª –æ—à–∏–±–æ–∫: {log_error_file}")
    logger.info(f"   üîÑ –†–æ—Ç–∞—Ü–∏—è: {log_rotation}")
    logger.info(f"   üóÇÔ∏è –•—Ä–∞–Ω–µ–Ω–∏–µ: {log_retention}")
    logger.info(f"   üêõ –û—Ç–ª–∞–¥–∫–∞: {'–≤–∫–ª—é—á–µ–Ω–∞' if debug else '–≤—ã–∫–ª—é—á–µ–Ω–∞'}")


def get_logger():
    """
    –ü–æ–ª—É—á–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –ª–æ–≥–≥–µ—Ä.
    
    Returns:
        –ù–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä loguru logger
    """
    return logger


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫
def setup_logging_from_settings() -> None:
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è."""
    setup_logging()
