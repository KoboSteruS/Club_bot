#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤ –≥—Ä—É–ø–ø–µ.

–ü—Ä–æ–≤–µ—Ä—è–µ—Ç:
1. –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞ –∏ –≥—Ä—É–ø–ø—ã
2. –ü—Ä–∞–≤–∞ –±–æ—Ç–∞ –≤ –≥—Ä—É–ø–ø–µ
3. –ê–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –≥—Ä—É–ø–ø–µ
4. –°—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
"""

import asyncio
import sys
from datetime import datetime, date
from loguru import logger

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
sys.path.append('.')

from config.settings import get_settings
from app.core.database import get_db_session, init_database
from app.services import ActivityService, UserService
from app.services.telegram_service import TelegramService
from telegram import Bot


async def check_bot_group_settings():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –±–æ—Ç–∞ –∏ –≥—Ä—É–ø–ø—ã."""
    logger.info("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞ –∏ –≥—Ä—É–ø–ø—ã...")
    
    settings = get_settings()
    
    print(f"üì± BOT_TOKEN: {settings.BOT_TOKEN[:10]}...")
    print(f"üè¢ GROUP_ID: {settings.GROUP_ID}")
    print(f"üì∫ CHANNEL_ID: {settings.CHANNEL_ID}")
    print(f"üëë ADMIN_IDS: {settings.ADMIN_IDS}")
    
    return settings


async def check_bot_permissions():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –±–æ—Ç–∞ –≤ –≥—Ä—É–ø–ø–µ."""
    logger.info("üîê –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –±–æ—Ç–∞ –≤ –≥—Ä—É–ø–ø–µ...")
    
    settings = get_settings()
    bot = Bot(token=settings.BOT_TOKEN)
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–æ—Ç–µ
        bot_info = await bot.get_me()
        print(f"ü§ñ –ë–æ—Ç: @{bot_info.username} ({bot_info.first_name})")
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≥—Ä—É–ø–ø–µ
        if settings.GROUP_ID:
            try:
                chat_info = await bot.get_chat(int(settings.GROUP_ID))
                print(f"üè¢ –ì—Ä—É–ø–ø–∞: {chat_info.title}")
                print(f"üìù –¢–∏–ø —á–∞—Ç–∞: {chat_info.type}")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –±–æ—Ç–∞ –≤ –≥—Ä—É–ø–ø–µ
                bot_member = await bot.get_chat_member(int(settings.GROUP_ID), bot_info.id)
                print(f"üîê –°—Ç–∞—Ç—É—Å –±–æ—Ç–∞ –≤ –≥—Ä—É–ø–ø–µ: {bot_member.status}")
                print(f"‚úÖ –ú–æ–∂–µ—Ç —á–∏—Ç–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è: {bot_member.can_read_all_group_messages}")
                print(f"‚úÖ –ú–æ–∂–µ—Ç —É–¥–∞–ª—è—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è: {bot_member.can_delete_messages}")
                
                return True
                
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≥—Ä—É–ø–ø–µ: {e}")
                return False
        else:
            print("‚ùå GROUP_ID –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –±–æ—Ç–µ: {e}")
        return False


async def check_activity_in_database():
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö."""
    logger.info("üìä –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö...")
    
    try:
        async with get_db_session() as session:
            activity_service = ActivityService(session)
            user_service = UserService(session)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
            today = date.today()
            yesterday = date.fromordinal(today.toordinal() - 1)
            
            print(f"\nüìÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏:")
            print(f"   –°–µ–≥–æ–¥–Ω—è ({today}):")
            
            # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
            today_stats = await activity_service.get_activity_stats_for_date(today)
            yesterday_stats = await activity_service.get_activity_stats_for_date(yesterday)
            
            print(f"   ‚Ä¢ –°–æ–æ–±—â–µ–Ω–∏–π: {today_stats.get('messages', 0)}")
            print(f"   ‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {today_stats.get('active_users', 0)}")
            
            print(f"   –í—á–µ—Ä–∞ ({yesterday}):")
            print(f"   ‚Ä¢ –°–æ–æ–±—â–µ–Ω–∏–π: {yesterday_stats.get('messages', 0)}")
            print(f"   ‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {yesterday_stats.get('active_users', 0)}")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≥—Ä—É–ø–ø—ã
            group_members = await user_service.get_users_by_status("active")
            group_members_count = len([u for u in group_members if u.is_in_group])
            
            print(f"\nüë• –£—á–∞—Å—Ç–Ω–∏–∫–∏ –≥—Ä—É–ø–ø—ã:")
            print(f"   ‚Ä¢ –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {len(group_members)}")
            print(f"   ‚Ä¢ –í –≥—Ä—É–ø–ø–µ: {group_members_count}")
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
            print(f"\nüìù –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏:")
            # –ó–¥–µ—Å—å –Ω—É–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –º–µ—Ç–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π
            
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤ –ë–î: {e}")


async def test_message_handling():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π."""
    logger.info("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É —Å–æ–æ–±—â–µ–Ω–∏–π...")
    
    settings = get_settings()
    bot = Bot(token=settings.BOT_TOKEN)
    telegram_service = TelegramService(bot)
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –º–æ–∂–µ—Ç –ª–∏ –±–æ—Ç –ø–æ–ª—É—á–∞—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        updates = await bot.get_updates(limit=10)
        print(f"üì® –ü–æ–ª—É—á–µ–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: {len(updates)}")
        
        for update in updates[-5:]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 5
            if update.message:
                chat_id = update.message.chat.id
                chat_type = update.message.chat.type
                from_user = update.message.from_user.username if update.message.from_user else "Unknown"
                
                print(f"   ‚Ä¢ –ß–∞—Ç {chat_id} ({chat_type}): @{from_user}")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–∑ –Ω–∞—à–µ–π –ª–∏ —ç—Ç–æ –≥—Ä—É–ø–ø—ã
                if str(chat_id) == settings.GROUP_ID:
                    print(f"     ‚úÖ –≠—Ç–æ –Ω–∞—à–∞ –≥—Ä—É–ø–ø–∞!")
                else:
                    print(f"     ‚ùå –≠—Ç–æ –Ω–µ –Ω–∞—à–∞ –≥—Ä—É–ø–ø–∞")
                    
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π: {e}")


async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è."""
    print("üöÄ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –≤ –≥—Ä—É–ø–ø–µ")
    print("=" * 50)
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    await init_database()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    settings = await check_bot_group_settings()
    
    print("\n" + "=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –±–æ—Ç–∞
    bot_ok = await check_bot_permissions()
    
    print("\n" + "=" * 50)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤ –ë–î
    await check_activity_in_database()
    
    print("\n" + "=" * 50)
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É —Å–æ–æ–±—â–µ–Ω–∏–π
    await test_message_handling()
    
    print("\n" + "=" * 50)
    print("‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
    
    if not bot_ok:
        print("‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –±–æ—Ç–∞ –∏–ª–∏ –≥—Ä—É–ø–ø—ã!")
        return False
    
    return True


if __name__ == "__main__":
    asyncio.run(main())
