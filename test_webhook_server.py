#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç–æ–≤—ã–π webhook —Å–µ—Ä–≤–µ—Ä –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏.
"""

import asyncio
from aiohttp import web
from loguru import logger

async def test_handler(request):
    """–¢–µ—Å—Ç–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫."""
    logger.info(f"–ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å: {request.method} {request.path}")
    data = await request.json() if request.content_type == 'application/json' else {}
    logger.info(f"–î–∞–Ω–Ω—ã–µ: {data}")
    return web.json_response({"status": "ok", "message": "Test webhook received"})

async def health_check(request):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–µ—Ä–∞."""
    return web.json_response({"status": "healthy"})

async def init_app():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è."""
    app = web.Application()
    app.router.add_post('/webhook/test', test_handler)
    app.router.add_get('/health', health_check)
    return app

async def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è."""
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ webhook —Å–µ—Ä–≤–µ—Ä–∞...")
    
    app = await init_app()
    runner = web.AppRunner(app)
    await runner.setup()
    
    site = web.TCPSite(runner, 'localhost', 8000)
    await site.start()
    
    logger.info("‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π webhook —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:8000")
    
    try:
        # –î–µ—Ä–∂–∏–º —Å–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω–Ω—ã–º
        while True:
            await asyncio.sleep(1)
    except KeyboardInterrupt:
        logger.info("üëã –°–µ—Ä–≤–µ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    finally:
        await runner.cleanup()

if __name__ == "__main__":
    asyncio.run(main())
